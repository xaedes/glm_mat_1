#pragma once

#include <glm/detail/qualifier.hpp>
#include <glm/fwd.hpp>

namespace glm
{
	// Matrix MxN

	typedef mat<1, 1, f32, lowp>		lowp_mat1x1;
	typedef mat<1, 2, f32, lowp>		lowp_mat1x2;
	typedef mat<1, 3, f32, lowp>		lowp_mat1x3;
	typedef mat<1, 4, f32, lowp>		lowp_mat1x4;
	typedef mat<2, 1, f32, lowp>		lowp_mat2x1;
	// typedef mat<2, 2, f32, lowp>		lowp_mat2x2;
	// typedef mat<2, 3, f32, lowp>		lowp_mat2x3;
	// typedef mat<2, 4, f32, lowp>		lowp_mat2x4;
	typedef mat<3, 1, f32, lowp>		lowp_mat3x1;
	// typedef mat<3, 2, f32, lowp>		lowp_mat3x2;
	// typedef mat<3, 3, f32, lowp>		lowp_mat3x3;
	// typedef mat<3, 4, f32, lowp>		lowp_mat3x4;
	typedef mat<4, 1, f32, lowp>		lowp_mat4x1;
	// typedef mat<4, 2, f32, lowp>		lowp_mat4x2;
	// typedef mat<4, 3, f32, lowp>		lowp_mat4x3;
	// typedef mat<4, 4, f32, lowp>		lowp_mat4x4;

	typedef mat<1, 1, f32, mediump>		mediump_mat1x1;
	typedef mat<1, 2, f32, mediump>		mediump_mat1x2;
	typedef mat<1, 3, f32, mediump>		mediump_mat1x3;
	typedef mat<1, 4, f32, mediump>		mediump_mat1x4;
	typedef mat<2, 1, f32, mediump>		mediump_mat2x1;
	// typedef mat<2, 2, f32, mediump>		mediump_mat2x2;
	// typedef mat<2, 3, f32, mediump>		mediump_mat2x3;
	// typedef mat<2, 4, f32, mediump>		mediump_mat2x4;
	typedef mat<3, 1, f32, mediump>		mediump_mat3x1;
	// typedef mat<3, 2, f32, mediump>		mediump_mat3x2;
	// typedef mat<3, 3, f32, mediump>		mediump_mat3x3;
	// typedef mat<3, 4, f32, mediump>		mediump_mat3x4;
	typedef mat<4, 1, f32, mediump>		mediump_mat4x1;
	// typedef mat<4, 2, f32, mediump>		mediump_mat4x2;
	// typedef mat<4, 3, f32, mediump>		mediump_mat4x3;
	// typedef mat<4, 4, f32, mediump>		mediump_mat4x4;

	typedef mat<1, 1, f32, highp>		highp_mat1x1;
	typedef mat<1, 2, f32, highp>		highp_mat1x2;
	typedef mat<1, 3, f32, highp>		highp_mat1x3;
	typedef mat<1, 4, f32, highp>		highp_mat1x4;
	typedef mat<2, 1, f32, highp>		highp_mat2x1;
	// typedef mat<2, 2, f32, highp>		highp_mat2x2;
	// typedef mat<2, 3, f32, highp>		highp_mat2x3;
	// typedef mat<2, 4, f32, highp>		highp_mat2x4;
	typedef mat<3, 1, f32, highp>		highp_mat3x1;
	// typedef mat<3, 2, f32, highp>		highp_mat3x2;
	// typedef mat<3, 3, f32, highp>		highp_mat3x3;
	// typedef mat<3, 4, f32, highp>		highp_mat3x4;
	typedef mat<4, 1, f32, highp>		highp_mat4x1;
	// typedef mat<4, 2, f32, highp>		highp_mat4x2;
	// typedef mat<4, 3, f32, highp>		highp_mat4x3;
	// typedef mat<4, 4, f32, highp>		highp_mat4x4;

	typedef mat<1, 1, f32, defaultp>	mat1x1;
	typedef mat<1, 2, f32, defaultp>	mat1x2;
	typedef mat<1, 3, f32, defaultp>	mat1x3;
	typedef mat<1, 4, f32, defaultp>	mat1x4;
	typedef mat<2, 1, f32, defaultp>	mat2x1;
	// typedef mat<2, 2, f32, defaultp>	mat2x2;
	// typedef mat<2, 3, f32, defaultp>	mat2x3;
	// typedef mat<2, 4, f32, defaultp>	mat2x4;
	typedef mat<3, 1, f32, defaultp>	mat3x1;
	// typedef mat<3, 2, f32, defaultp>	mat3x2;
	// typedef mat<3, 3, f32, defaultp>	mat3x3;
	// typedef mat<3, 4, f32, defaultp>	mat3x4;
	typedef mat<4, 1, f32, defaultp>	mat4x1;
	// typedef mat<4, 2, f32, defaultp>	mat4x2;
	// typedef mat<4, 3, f32, defaultp>	mat4x3;
	// typedef mat<4, 4, f32, defaultp>	mat4x4;

	typedef mat<1, 1, f32, lowp>		lowp_fmat1x1;
	typedef mat<1, 2, f32, lowp>		lowp_fmat1x2;
	typedef mat<1, 3, f32, lowp>		lowp_fmat1x3;
	typedef mat<1, 4, f32, lowp>		lowp_fmat1x4;
	typedef mat<2, 1, f32, lowp>		lowp_fmat2x1;
	// typedef mat<2, 2, f32, lowp>		lowp_fmat2x2;
	// typedef mat<2, 3, f32, lowp>		lowp_fmat2x3;
	// typedef mat<2, 4, f32, lowp>		lowp_fmat2x4;
	typedef mat<3, 1, f32, lowp>		lowp_fmat3x1;
	// typedef mat<3, 2, f32, lowp>		lowp_fmat3x2;
	// typedef mat<3, 3, f32, lowp>		lowp_fmat3x3;
	// typedef mat<3, 4, f32, lowp>		lowp_fmat3x4;
	typedef mat<4, 1, f32, lowp>		lowp_fmat4x1;
	// typedef mat<4, 2, f32, lowp>		lowp_fmat4x2;
	// typedef mat<4, 3, f32, lowp>		lowp_fmat4x3;
	// typedef mat<4, 4, f32, lowp>		lowp_fmat4x4;

	typedef mat<1, 1, f32, mediump>		mediump_fmat1x1;
	typedef mat<1, 2, f32, mediump>		mediump_fmat1x2;
	typedef mat<1, 3, f32, mediump>		mediump_fmat1x3;
	typedef mat<1, 4, f32, mediump>		mediump_fmat1x4;
	typedef mat<2, 1, f32, mediump>		mediump_fmat2x1;
	// typedef mat<2, 2, f32, mediump>		mediump_fmat2x2;
	// typedef mat<2, 3, f32, mediump>		mediump_fmat2x3;
	// typedef mat<2, 4, f32, mediump>		mediump_fmat2x4;
	typedef mat<3, 1, f32, mediump>		mediump_fmat3x1;
	// typedef mat<3, 2, f32, mediump>		mediump_fmat3x2;
	// typedef mat<3, 3, f32, mediump>		mediump_fmat3x3;
	// typedef mat<3, 4, f32, mediump>		mediump_fmat3x4;
	typedef mat<4, 1, f32, mediump>		mediump_fmat4x1;
	// typedef mat<4, 2, f32, mediump>		mediump_fmat4x2;
	// typedef mat<4, 3, f32, mediump>		mediump_fmat4x3;
	// typedef mat<4, 4, f32, mediump>		mediump_fmat4x4;

	typedef mat<1, 1, f32, highp>		highp_fmat1x1;
	typedef mat<1, 2, f32, highp>		highp_fmat1x2;
	typedef mat<1, 3, f32, highp>		highp_fmat1x3;
	typedef mat<1, 4, f32, highp>		highp_fmat1x4;
	typedef mat<2, 1, f32, highp>		highp_fmat2x1;
	// typedef mat<2, 2, f32, highp>		highp_fmat2x2;
	// typedef mat<2, 3, f32, highp>		highp_fmat2x3;
	// typedef mat<2, 4, f32, highp>		highp_fmat2x4;
	typedef mat<3, 1, f32, highp>		highp_fmat3x1;
	// typedef mat<3, 2, f32, highp>		highp_fmat3x2;
	// typedef mat<3, 3, f32, highp>		highp_fmat3x3;
	// typedef mat<3, 4, f32, highp>		highp_fmat3x4;
	typedef mat<4, 1, f32, highp>		highp_fmat4x1;
	// typedef mat<4, 2, f32, highp>		highp_fmat4x2;
	// typedef mat<4, 3, f32, highp>		highp_fmat4x3;
	// typedef mat<4, 4, f32, highp>		highp_fmat4x4;

	typedef mat<1, 1, f32, defaultp>	fmat1x1;
	typedef mat<1, 2, f32, defaultp>	fmat1x2;
	typedef mat<1, 3, f32, defaultp>	fmat1x3;
	typedef mat<1, 4, f32, defaultp>	fmat1x4;
	typedef mat<2, 1, f32, defaultp>	fmat2x1;
	// typedef mat<2, 2, f32, defaultp>	fmat2x2;
	// typedef mat<2, 3, f32, defaultp>	fmat2x3;
	// typedef mat<2, 4, f32, defaultp>	fmat2x4;
	typedef mat<3, 1, f32, defaultp>	fmat3x1;
	// typedef mat<3, 2, f32, defaultp>	fmat3x2;
	// typedef mat<3, 3, f32, defaultp>	fmat3x3;
	// typedef mat<3, 4, f32, defaultp>	fmat3x4;
	typedef mat<4, 1, f32, defaultp>	fmat4x1;
	// typedef mat<4, 2, f32, defaultp>	fmat4x2;
	// typedef mat<4, 3, f32, defaultp>	fmat4x3;
	// typedef mat<4, 4, f32, defaultp>	fmat4x4;

	typedef mat<1, 1, f32, lowp>		lowp_f32mat1x1;
	typedef mat<1, 2, f32, lowp>		lowp_f32mat1x2;
	typedef mat<1, 3, f32, lowp>		lowp_f32mat1x3;
	typedef mat<1, 4, f32, lowp>		lowp_f32mat1x4;
	typedef mat<2, 1, f32, lowp>		lowp_f32mat2x1;
	// typedef mat<2, 2, f32, lowp>		lowp_f32mat2x2;
	// typedef mat<2, 3, f32, lowp>		lowp_f32mat2x3;
	// typedef mat<2, 4, f32, lowp>		lowp_f32mat2x4;
	typedef mat<3, 1, f32, lowp>		lowp_f32mat3x1;
	// typedef mat<3, 2, f32, lowp>		lowp_f32mat3x2;
	// typedef mat<3, 3, f32, lowp>		lowp_f32mat3x3;
	// typedef mat<3, 4, f32, lowp>		lowp_f32mat3x4;
	typedef mat<4, 1, f32, lowp>		lowp_f32mat4x1;
	// typedef mat<4, 2, f32, lowp>		lowp_f32mat4x2;
	// typedef mat<4, 3, f32, lowp>		lowp_f32mat4x3;
	// typedef mat<4, 4, f32, lowp>		lowp_f32mat4x4;
	
	typedef mat<1, 1, f32, mediump>		mediump_f32mat1x1;
	typedef mat<1, 2, f32, mediump>		mediump_f32mat1x2;
	typedef mat<1, 3, f32, mediump>		mediump_f32mat1x3;
	typedef mat<1, 4, f32, mediump>		mediump_f32mat1x4;
	typedef mat<2, 1, f32, mediump>		mediump_f32mat2x1;
	// typedef mat<2, 2, f32, mediump>		mediump_f32mat2x2;
	// typedef mat<2, 3, f32, mediump>		mediump_f32mat2x3;
	// typedef mat<2, 4, f32, mediump>		mediump_f32mat2x4;
	typedef mat<3, 1, f32, mediump>		mediump_f32mat3x1;
	// typedef mat<3, 2, f32, mediump>		mediump_f32mat3x2;
	// typedef mat<3, 3, f32, mediump>		mediump_f32mat3x3;
	// typedef mat<3, 4, f32, mediump>		mediump_f32mat3x4;
	typedef mat<4, 1, f32, mediump>		mediump_f32mat4x1;
	// typedef mat<4, 2, f32, mediump>		mediump_f32mat4x2;
	// typedef mat<4, 3, f32, mediump>		mediump_f32mat4x3;
	// typedef mat<4, 4, f32, mediump>		mediump_f32mat4x4;

	typedef mat<1, 1, f32, highp>		highp_f32mat1x1;
	typedef mat<1, 2, f32, highp>		highp_f32mat1x2;
	typedef mat<1, 3, f32, highp>		highp_f32mat1x3;
	typedef mat<1, 4, f32, highp>		highp_f32mat1x4;
	typedef mat<2, 1, f32, highp>		highp_f32mat2x1;
	// typedef mat<2, 2, f32, highp>		highp_f32mat2x2;
	// typedef mat<2, 3, f32, highp>		highp_f32mat2x3;
	// typedef mat<2, 4, f32, highp>		highp_f32mat2x4;
	typedef mat<3, 1, f32, highp>		highp_f32mat3x1;
	// typedef mat<3, 2, f32, highp>		highp_f32mat3x2;
	// typedef mat<3, 3, f32, highp>		highp_f32mat3x3;
	// typedef mat<3, 4, f32, highp>		highp_f32mat3x4;
	typedef mat<4, 1, f32, highp>		highp_f32mat4x1;
	// typedef mat<4, 2, f32, highp>		highp_f32mat4x2;
	// typedef mat<4, 3, f32, highp>		highp_f32mat4x3;
	// typedef mat<4, 4, f32, highp>		highp_f32mat4x4;

	typedef mat<1, 1, f32, defaultp>	f32mat1x1;
	typedef mat<1, 2, f32, defaultp>	f32mat1x2;
	typedef mat<1, 3, f32, defaultp>	f32mat1x3;
	typedef mat<1, 4, f32, defaultp>	f32mat1x4;
	typedef mat<2, 1, f32, defaultp>	f32mat2x1;
	// typedef mat<2, 2, f32, defaultp>	f32mat2x2;
	// typedef mat<2, 3, f32, defaultp>	f32mat2x3;
	// typedef mat<2, 4, f32, defaultp>	f32mat2x4;
	typedef mat<3, 1, f32, defaultp>	f32mat3x1;
	// typedef mat<3, 2, f32, defaultp>	f32mat3x2;
	// typedef mat<3, 3, f32, defaultp>	f32mat3x3;
	// typedef mat<3, 4, f32, defaultp>	f32mat3x4;
	typedef mat<4, 1, f32, defaultp>	f32mat4x1;
	// typedef mat<4, 2, f32, defaultp>	f32mat4x2;
	// typedef mat<4, 3, f32, defaultp>	f32mat4x3;
	// typedef mat<4, 4, f32, defaultp>	f32mat4x4;

	typedef mat<1, 1, double, lowp>		lowp_dmat1x1;
	typedef mat<1, 2, double, lowp>		lowp_dmat1x2;
	typedef mat<1, 3, double, lowp>		lowp_dmat1x3;
	typedef mat<1, 4, double, lowp>		lowp_dmat1x4;
	typedef mat<2, 1, double, lowp>		lowp_dmat2x1;
	// typedef mat<2, 2, double, lowp>		lowp_dmat2x2;
	// typedef mat<2, 3, double, lowp>		lowp_dmat2x3;
	// typedef mat<2, 4, double, lowp>		lowp_dmat2x4;
	typedef mat<3, 1, double, lowp>		lowp_dmat3x1;
	// typedef mat<3, 2, double, lowp>		lowp_dmat3x2;
	// typedef mat<3, 3, double, lowp>		lowp_dmat3x3;
	// typedef mat<3, 4, double, lowp>		lowp_dmat3x4;
	typedef mat<4, 1, double, lowp>		lowp_dmat4x1;
	// typedef mat<4, 2, double, lowp>		lowp_dmat4x2;
	// typedef mat<4, 3, double, lowp>		lowp_dmat4x3;
	// typedef mat<4, 4, double, lowp>		lowp_dmat4x4;

	typedef mat<1, 1, double, mediump>	mediump_dmat1x1;
	typedef mat<1, 2, double, mediump>	mediump_dmat1x2;
	typedef mat<1, 3, double, mediump>	mediump_dmat1x3;
	typedef mat<1, 4, double, mediump>	mediump_dmat1x4;
	typedef mat<2, 1, double, mediump>	mediump_dmat2x1;
	// typedef mat<2, 2, double, mediump>	mediump_dmat2x2;
	// typedef mat<2, 3, double, mediump>	mediump_dmat2x3;
	// typedef mat<2, 4, double, mediump>	mediump_dmat2x4;
	typedef mat<3, 1, double, mediump>	mediump_dmat3x1;
	// typedef mat<3, 2, double, mediump>	mediump_dmat3x2;
	// typedef mat<3, 3, double, mediump>	mediump_dmat3x3;
	// typedef mat<3, 4, double, mediump>	mediump_dmat3x4;
	typedef mat<4, 1, double, mediump>	mediump_dmat4x1;
	// typedef mat<4, 2, double, mediump>	mediump_dmat4x2;
	// typedef mat<4, 3, double, mediump>	mediump_dmat4x3;
	// typedef mat<4, 4, double, mediump>	mediump_dmat4x4;

	typedef mat<1, 1, double, highp>	highp_dmat1x1;
	typedef mat<1, 2, double, highp>	highp_dmat1x2;
	typedef mat<1, 3, double, highp>	highp_dmat1x3;
	typedef mat<1, 4, double, highp>	highp_dmat1x4;
	typedef mat<2, 1, double, highp>	highp_dmat2x1;
	// typedef mat<2, 2, double, highp>	highp_dmat2x2;
	// typedef mat<2, 3, double, highp>	highp_dmat2x3;
	// typedef mat<2, 4, double, highp>	highp_dmat2x4;
	typedef mat<3, 1, double, highp>	highp_dmat3x1;
	// typedef mat<3, 2, double, highp>	highp_dmat3x2;
	// typedef mat<3, 3, double, highp>	highp_dmat3x3;
	// typedef mat<3, 4, double, highp>	highp_dmat3x4;
	typedef mat<4, 1, double, highp>	highp_dmat4x1;
	// typedef mat<4, 2, double, highp>	highp_dmat4x2;
	// typedef mat<4, 3, double, highp>	highp_dmat4x3;
	// typedef mat<4, 4, double, highp>	highp_dmat4x4;

	typedef mat<1, 1, double, defaultp>	dmat1x1;
	typedef mat<1, 2, double, defaultp>	dmat1x2;
	typedef mat<1, 3, double, defaultp>	dmat1x3;
	typedef mat<1, 4, double, defaultp>	dmat1x4;
	typedef mat<2, 1, double, defaultp>	dmat2x1;
	// typedef mat<2, 2, double, defaultp>	dmat2x2;
	// typedef mat<2, 3, double, defaultp>	dmat2x3;
	// typedef mat<2, 4, double, defaultp>	dmat2x4;
	typedef mat<3, 1, double, defaultp>	dmat3x1;
	// typedef mat<3, 2, double, defaultp>	dmat3x2;
	// typedef mat<3, 3, double, defaultp>	dmat3x3;
	// typedef mat<3, 4, double, defaultp>	dmat3x4;
	typedef mat<4, 1, double, defaultp>	dmat4x1;
	// typedef mat<4, 2, double, defaultp>	dmat4x2;
	// typedef mat<4, 3, double, defaultp>	dmat4x3;
	// typedef mat<4, 4, double, defaultp>	dmat4x4;

	typedef mat<1, 1, f64, lowp>		lowp_f64mat1x1;
	typedef mat<1, 2, f64, lowp>		lowp_f64mat1x2;
	typedef mat<1, 3, f64, lowp>		lowp_f64mat1x3;
	typedef mat<1, 4, f64, lowp>		lowp_f64mat1x4;
	typedef mat<2, 1, f64, lowp>		lowp_f64mat2x1;
	// typedef mat<2, 2, f64, lowp>		lowp_f64mat2x2;
	// typedef mat<2, 3, f64, lowp>		lowp_f64mat2x3;
	// typedef mat<2, 4, f64, lowp>		lowp_f64mat2x4;
	typedef mat<3, 1, f64, lowp>		lowp_f64mat3x1;
	// typedef mat<3, 2, f64, lowp>		lowp_f64mat3x2;
	// typedef mat<3, 3, f64, lowp>		lowp_f64mat3x3;
	// typedef mat<3, 4, f64, lowp>		lowp_f64mat3x4;
	typedef mat<4, 1, f64, lowp>		lowp_f64mat4x1;
	// typedef mat<4, 2, f64, lowp>		lowp_f64mat4x2;
	// typedef mat<4, 3, f64, lowp>		lowp_f64mat4x3;
	// typedef mat<4, 4, f64, lowp>		lowp_f64mat4x4;

	typedef mat<1, 1, f64, mediump>		mediump_f64mat1x1;
	typedef mat<1, 2, f64, mediump>		mediump_f64mat1x2;
	typedef mat<1, 3, f64, mediump>		mediump_f64mat1x3;
	typedef mat<1, 4, f64, mediump>		mediump_f64mat1x4;
	typedef mat<2, 1, f64, mediump>		mediump_f64mat2x1;
	// typedef mat<2, 2, f64, mediump>		mediump_f64mat2x2;
	// typedef mat<2, 3, f64, mediump>		mediump_f64mat2x3;
	// typedef mat<2, 4, f64, mediump>		mediump_f64mat2x4;
	typedef mat<3, 1, f64, mediump>		mediump_f64mat3x1;
	// typedef mat<3, 2, f64, mediump>		mediump_f64mat3x2;
	// typedef mat<3, 3, f64, mediump>		mediump_f64mat3x3;
	// typedef mat<3, 4, f64, mediump>		mediump_f64mat3x4;
	typedef mat<4, 1, f64, mediump>		mediump_f64mat4x1;
	// typedef mat<4, 2, f64, mediump>		mediump_f64mat4x2;
	// typedef mat<4, 3, f64, mediump>		mediump_f64mat4x3;
	// typedef mat<4, 4, f64, mediump>		mediump_f64mat4x4;

	typedef mat<1, 1, f64, highp>		highp_f64mat1x1;
	typedef mat<1, 2, f64, highp>		highp_f64mat1x2;
	typedef mat<1, 3, f64, highp>		highp_f64mat1x3;
	typedef mat<1, 4, f64, highp>		highp_f64mat1x4;
	typedef mat<2, 1, f64, highp>		highp_f64mat2x1;
	// typedef mat<2, 2, f64, highp>		highp_f64mat2x2;
	// typedef mat<2, 3, f64, highp>		highp_f64mat2x3;
	// typedef mat<2, 4, f64, highp>		highp_f64mat2x4;
	typedef mat<3, 1, f64, highp>		highp_f64mat3x1;
	// typedef mat<3, 2, f64, highp>		highp_f64mat3x2;
	// typedef mat<3, 3, f64, highp>		highp_f64mat3x3;
	// typedef mat<3, 4, f64, highp>		highp_f64mat3x4;
	typedef mat<4, 1, f64, highp>		highp_f64mat4x1;
	// typedef mat<4, 2, f64, highp>		highp_f64mat4x2;
	// typedef mat<4, 3, f64, highp>		highp_f64mat4x3;
	// typedef mat<4, 4, f64, highp>		highp_f64mat4x4;

	typedef mat<1, 1, f64, defaultp>	f64mat1x1;
	typedef mat<1, 2, f64, defaultp>	f64mat1x2;
	typedef mat<1, 3, f64, defaultp>	f64mat1x3;
	typedef mat<1, 4, f64, defaultp>	f64mat1x4;
	typedef mat<2, 1, f64, defaultp>	f64mat2x1;
	// typedef mat<2, 2, f64, defaultp>	f64mat2x2;
	// typedef mat<2, 3, f64, defaultp>	f64mat2x3;
	// typedef mat<2, 4, f64, defaultp>	f64mat2x4;
	typedef mat<3, 1, f64, defaultp>	f64mat3x1;
	// typedef mat<3, 2, f64, defaultp>	f64mat3x2;
	// typedef mat<3, 3, f64, defaultp>	f64mat3x3;
	// typedef mat<3, 4, f64, defaultp>	f64mat3x4;
	typedef mat<4, 1, f64, defaultp>	f64mat4x1;
	// typedef mat<4, 2, f64, defaultp>	f64mat4x2;
	// typedef mat<4, 3, f64, defaultp>	f64mat4x3;
	// typedef mat<4, 4, f64, defaultp>	f64mat4x4;

	// Signed integer matrix MxN

	typedef mat<1, 1, int, lowp>		lowp_imat1x1;
	typedef mat<1, 2, int, lowp>		lowp_imat1x2;
	typedef mat<1, 3, int, lowp>		lowp_imat1x3;
	typedef mat<1, 4, int, lowp>		lowp_imat1x4;
	typedef mat<2, 1, int, lowp>		lowp_imat2x1;
	// typedef mat<2, 2, int, lowp>		lowp_imat2x2;
	// typedef mat<2, 3, int, lowp>		lowp_imat2x3;
	// typedef mat<2, 4, int, lowp>		lowp_imat2x4;
	typedef mat<3, 1, int, lowp>		lowp_imat3x1;
	// typedef mat<3, 2, int, lowp>		lowp_imat3x2;
	// typedef mat<3, 3, int, lowp>		lowp_imat3x3;
	// typedef mat<3, 4, int, lowp>		lowp_imat3x4;
	typedef mat<4, 1, int, lowp>		lowp_imat4x1;
	// typedef mat<4, 2, int, lowp>		lowp_imat4x2;
	// typedef mat<4, 3, int, lowp>		lowp_imat4x3;
	// typedef mat<4, 4, int, lowp>		lowp_imat4x4;

	typedef mat<1, 1, int, mediump>		mediump_imat1x1;
	typedef mat<1, 2, int, mediump>		mediump_imat1x2;
	typedef mat<1, 3, int, mediump>		mediump_imat1x3;
	typedef mat<1, 4, int, mediump>		mediump_imat1x4;
	typedef mat<2, 1, int, mediump>		mediump_imat2x1;
	// typedef mat<2, 2, int, mediump>		mediump_imat2x2;
	// typedef mat<2, 3, int, mediump>		mediump_imat2x3;
	// typedef mat<2, 4, int, mediump>		mediump_imat2x4;
	typedef mat<3, 1, int, mediump>		mediump_imat3x1;
	// typedef mat<3, 2, int, mediump>		mediump_imat3x2;
	// typedef mat<3, 3, int, mediump>		mediump_imat3x3;
	// typedef mat<3, 4, int, mediump>		mediump_imat3x4;
	typedef mat<4, 1, int, mediump>		mediump_imat4x1;
	// typedef mat<4, 2, int, mediump>		mediump_imat4x2;
	// typedef mat<4, 3, int, mediump>		mediump_imat4x3;
	// typedef mat<4, 4, int, mediump>		mediump_imat4x4;

	typedef mat<1, 1, int, highp>		highp_imat1x1;
	typedef mat<1, 2, int, highp>		highp_imat1x2;
	typedef mat<1, 3, int, highp>		highp_imat1x3;
	typedef mat<1, 4, int, highp>		highp_imat1x4;
	typedef mat<2, 1, int, highp>		highp_imat2x1;
	// typedef mat<2, 2, int, highp>		highp_imat2x2;
	// typedef mat<2, 3, int, highp>		highp_imat2x3;
	// typedef mat<2, 4, int, highp>		highp_imat2x4;
	typedef mat<3, 1, int, highp>		highp_imat3x1;
	// typedef mat<3, 2, int, highp>		highp_imat3x2;
	// typedef mat<3, 3, int, highp>		highp_imat3x3;
	// typedef mat<3, 4, int, highp>		highp_imat3x4;
	typedef mat<4, 1, int, highp>		highp_imat4x1;
	// typedef mat<4, 2, int, highp>		highp_imat4x2;
	// typedef mat<4, 3, int, highp>		highp_imat4x3;
	// typedef mat<4, 4, int, highp>		highp_imat4x4;

	typedef mat<1, 1, int, defaultp>	imat1x1;
	typedef mat<1, 2, int, defaultp>	imat1x2;
	typedef mat<1, 3, int, defaultp>	imat1x3;
	typedef mat<1, 4, int, defaultp>	imat1x4;
	typedef mat<2, 1, int, defaultp>	imat2x1;
	// typedef mat<2, 2, int, defaultp>	imat2x2;
	// typedef mat<2, 3, int, defaultp>	imat2x3;
	// typedef mat<2, 4, int, defaultp>	imat2x4;
	typedef mat<3, 1, int, defaultp>	imat3x1;
	// typedef mat<3, 2, int, defaultp>	imat3x2;
	// typedef mat<3, 3, int, defaultp>	imat3x3;
	// typedef mat<3, 4, int, defaultp>	imat3x4;
	typedef mat<4, 1, int, defaultp>	imat4x1;
	// typedef mat<4, 2, int, defaultp>	imat4x2;
	// typedef mat<4, 3, int, defaultp>	imat4x3;
	// typedef mat<4, 4, int, defaultp>	imat4x4;


	typedef mat<1, 1, int8, lowp>		lowp_i8mat1x1;
	typedef mat<1, 2, int8, lowp>		lowp_i8mat1x2;
	typedef mat<1, 3, int8, lowp>		lowp_i8mat1x3;
	typedef mat<1, 4, int8, lowp>		lowp_i8mat1x4;
	typedef mat<2, 1, int8, lowp>		lowp_i8mat2x1;
	// typedef mat<2, 2, int8, lowp>		lowp_i8mat2x2;
	// typedef mat<2, 3, int8, lowp>		lowp_i8mat2x3;
	// typedef mat<2, 4, int8, lowp>		lowp_i8mat2x4;
	typedef mat<3, 1, int8, lowp>		lowp_i8mat3x1;
	// typedef mat<3, 2, int8, lowp>		lowp_i8mat3x2;
	// typedef mat<3, 3, int8, lowp>		lowp_i8mat3x3;
	// typedef mat<3, 4, int8, lowp>		lowp_i8mat3x4;
	typedef mat<4, 1, int8, lowp>		lowp_i8mat4x1;
	// typedef mat<4, 2, int8, lowp>		lowp_i8mat4x2;
	// typedef mat<4, 3, int8, lowp>		lowp_i8mat4x3;
	// typedef mat<4, 4, int8, lowp>		lowp_i8mat4x4;

	typedef mat<1, 1, int8, mediump>	mediump_i8mat1x1;
	typedef mat<1, 2, int8, mediump>	mediump_i8mat1x2;
	typedef mat<1, 3, int8, mediump>	mediump_i8mat1x3;
	typedef mat<1, 4, int8, mediump>	mediump_i8mat1x4;
	typedef mat<2, 1, int8, mediump>	mediump_i8mat2x1;
	// typedef mat<2, 2, int8, mediump>	mediump_i8mat2x2;
	// typedef mat<2, 3, int8, mediump>	mediump_i8mat2x3;
	// typedef mat<2, 4, int8, mediump>	mediump_i8mat2x4;
	typedef mat<3, 1, int8, mediump>	mediump_i8mat3x1;
	// typedef mat<3, 2, int8, mediump>	mediump_i8mat3x2;
	// typedef mat<3, 3, int8, mediump>	mediump_i8mat3x3;
	// typedef mat<3, 4, int8, mediump>	mediump_i8mat3x4;
	typedef mat<4, 1, int8, mediump>	mediump_i8mat4x1;
	// typedef mat<4, 2, int8, mediump>	mediump_i8mat4x2;
	// typedef mat<4, 3, int8, mediump>	mediump_i8mat4x3;
	// typedef mat<4, 4, int8, mediump>	mediump_i8mat4x4;

	typedef mat<1, 1, int8, highp>		highp_i8mat1x1;
	typedef mat<1, 2, int8, highp>		highp_i8mat1x2;
	typedef mat<1, 3, int8, highp>		highp_i8mat1x3;
	typedef mat<1, 4, int8, highp>		highp_i8mat1x4;
	typedef mat<2, 1, int8, highp>		highp_i8mat2x1;
	// typedef mat<2, 2, int8, highp>		highp_i8mat2x2;
	// typedef mat<2, 3, int8, highp>		highp_i8mat2x3;
	// typedef mat<2, 4, int8, highp>		highp_i8mat2x4;
	typedef mat<3, 1, int8, highp>		highp_i8mat3x1;
	// typedef mat<3, 2, int8, highp>		highp_i8mat3x2;
	// typedef mat<3, 3, int8, highp>		highp_i8mat3x3;
	// typedef mat<3, 4, int8, highp>		highp_i8mat3x4;
	typedef mat<4, 1, int8, highp>		highp_i8mat4x1;
	// typedef mat<4, 2, int8, highp>		highp_i8mat4x2;
	// typedef mat<4, 3, int8, highp>		highp_i8mat4x3;
	// typedef mat<4, 4, int8, highp>		highp_i8mat4x4;

	typedef mat<1, 1, int8, defaultp>	i8mat1x1;
	typedef mat<1, 2, int8, defaultp>	i8mat1x2;
	typedef mat<1, 3, int8, defaultp>	i8mat1x3;
	typedef mat<1, 4, int8, defaultp>	i8mat1x4;
	typedef mat<2, 1, int8, defaultp>	i8mat2x1;
	// typedef mat<2, 2, int8, defaultp>	i8mat2x2;
	// typedef mat<2, 3, int8, defaultp>	i8mat2x3;
	// typedef mat<2, 4, int8, defaultp>	i8mat2x4;
	typedef mat<3, 1, int8, defaultp>	i8mat3x1;
	// typedef mat<3, 2, int8, defaultp>	i8mat3x2;
	// typedef mat<3, 3, int8, defaultp>	i8mat3x3;
	// typedef mat<3, 4, int8, defaultp>	i8mat3x4;
	typedef mat<4, 1, int8, defaultp>	i8mat4x1;
	// typedef mat<4, 2, int8, defaultp>	i8mat4x2;
	// typedef mat<4, 3, int8, defaultp>	i8mat4x3;
	// typedef mat<4, 4, int8, defaultp>	i8mat4x4;


	typedef mat<1, 1, int16, lowp>		lowp_i16mat1x1;
	typedef mat<1, 2, int16, lowp>		lowp_i16mat1x2;
	typedef mat<1, 3, int16, lowp>		lowp_i16mat1x3;
	typedef mat<1, 4, int16, lowp>		lowp_i16mat1x4;
	typedef mat<2, 1, int16, lowp>		lowp_i16mat2x1;
	// typedef mat<2, 2, int16, lowp>		lowp_i16mat2x2;
	// typedef mat<2, 3, int16, lowp>		lowp_i16mat2x3;
	// typedef mat<2, 4, int16, lowp>		lowp_i16mat2x4;
	typedef mat<3, 1, int16, lowp>		lowp_i16mat3x1;
	// typedef mat<3, 2, int16, lowp>		lowp_i16mat3x2;
	// typedef mat<3, 3, int16, lowp>		lowp_i16mat3x3;
	// typedef mat<3, 4, int16, lowp>		lowp_i16mat3x4;
	typedef mat<4, 1, int16, lowp>		lowp_i16mat4x1;
	// typedef mat<4, 2, int16, lowp>		lowp_i16mat4x2;
	// typedef mat<4, 3, int16, lowp>		lowp_i16mat4x3;
	// typedef mat<4, 4, int16, lowp>		lowp_i16mat4x4;

	typedef mat<1, 1, int16, mediump>	mediump_i16mat1x1;
	typedef mat<1, 2, int16, mediump>	mediump_i16mat1x2;
	typedef mat<1, 3, int16, mediump>	mediump_i16mat1x3;
	typedef mat<1, 4, int16, mediump>	mediump_i16mat1x4;
	typedef mat<2, 1, int16, mediump>	mediump_i16mat2x1;
	// typedef mat<2, 2, int16, mediump>	mediump_i16mat2x2;
	// typedef mat<2, 3, int16, mediump>	mediump_i16mat2x3;
	// typedef mat<2, 4, int16, mediump>	mediump_i16mat2x4;
	typedef mat<3, 1, int16, mediump>	mediump_i16mat3x1;
	// typedef mat<3, 2, int16, mediump>	mediump_i16mat3x2;
	// typedef mat<3, 3, int16, mediump>	mediump_i16mat3x3;
	// typedef mat<3, 4, int16, mediump>	mediump_i16mat3x4;
	typedef mat<4, 1, int16, mediump>	mediump_i16mat4x1;
	// typedef mat<4, 2, int16, mediump>	mediump_i16mat4x2;
	// typedef mat<4, 3, int16, mediump>	mediump_i16mat4x3;
	// typedef mat<4, 4, int16, mediump>	mediump_i16mat4x4;

	typedef mat<1, 1, int16, highp>		highp_i16mat1x1;
	typedef mat<1, 2, int16, highp>		highp_i16mat1x2;
	typedef mat<1, 3, int16, highp>		highp_i16mat1x3;
	typedef mat<1, 4, int16, highp>		highp_i16mat1x4;
	typedef mat<2, 1, int16, highp>		highp_i16mat2x1;
	// typedef mat<2, 2, int16, highp>		highp_i16mat2x2;
	// typedef mat<2, 3, int16, highp>		highp_i16mat2x3;
	// typedef mat<2, 4, int16, highp>		highp_i16mat2x4;
	typedef mat<3, 1, int16, highp>		highp_i16mat3x1;
	// typedef mat<3, 2, int16, highp>		highp_i16mat3x2;
	// typedef mat<3, 3, int16, highp>		highp_i16mat3x3;
	// typedef mat<3, 4, int16, highp>		highp_i16mat3x4;
	typedef mat<4, 1, int16, highp>		highp_i16mat4x1;
	// typedef mat<4, 2, int16, highp>		highp_i16mat4x2;
	// typedef mat<4, 3, int16, highp>		highp_i16mat4x3;
	// typedef mat<4, 4, int16, highp>		highp_i16mat4x4;

	typedef mat<1, 1, int16, defaultp>	i16mat1x1;
	typedef mat<1, 2, int16, defaultp>	i16mat1x2;
	typedef mat<1, 3, int16, defaultp>	i16mat1x3;
	typedef mat<1, 4, int16, defaultp>	i16mat1x4;
	typedef mat<2, 1, int16, defaultp>	i16mat2x1;
	// typedef mat<2, 2, int16, defaultp>	i16mat2x2;
	// typedef mat<2, 3, int16, defaultp>	i16mat2x3;
	// typedef mat<2, 4, int16, defaultp>	i16mat2x4;
	typedef mat<3, 1, int16, defaultp>	i16mat3x1;
	// typedef mat<3, 2, int16, defaultp>	i16mat3x2;
	// typedef mat<3, 3, int16, defaultp>	i16mat3x3;
	// typedef mat<3, 4, int16, defaultp>	i16mat3x4;
	typedef mat<4, 1, int16, defaultp>	i16mat4x1;
	// typedef mat<4, 2, int16, defaultp>	i16mat4x2;
	// typedef mat<4, 3, int16, defaultp>	i16mat4x3;
	// typedef mat<4, 4, int16, defaultp>	i16mat4x4;


	typedef mat<1, 1, int32, lowp>		lowp_i32mat1x1;
	typedef mat<1, 2, int32, lowp>		lowp_i32mat1x2;
	typedef mat<1, 3, int32, lowp>		lowp_i32mat1x3;
	typedef mat<1, 4, int32, lowp>		lowp_i32mat1x4;
	typedef mat<2, 1, int32, lowp>		lowp_i32mat2x1;
	// typedef mat<2, 2, int32, lowp>		lowp_i32mat2x2;
	// typedef mat<2, 3, int32, lowp>		lowp_i32mat2x3;
	// typedef mat<2, 4, int32, lowp>		lowp_i32mat2x4;
	typedef mat<3, 1, int32, lowp>		lowp_i32mat3x1;
	// typedef mat<3, 2, int32, lowp>		lowp_i32mat3x2;
	// typedef mat<3, 3, int32, lowp>		lowp_i32mat3x3;
	// typedef mat<3, 4, int32, lowp>		lowp_i32mat3x4;
	typedef mat<4, 1, int32, lowp>		lowp_i32mat4x1;
	// typedef mat<4, 2, int32, lowp>		lowp_i32mat4x2;
	// typedef mat<4, 3, int32, lowp>		lowp_i32mat4x3;
	// typedef mat<4, 4, int32, lowp>		lowp_i32mat4x4;

	typedef mat<1, 1, int32, mediump>	mediump_i32mat1x1;
	typedef mat<1, 2, int32, mediump>	mediump_i32mat1x2;
	typedef mat<1, 3, int32, mediump>	mediump_i32mat1x3;
	typedef mat<1, 4, int32, mediump>	mediump_i32mat1x4;
	typedef mat<2, 1, int32, mediump>	mediump_i32mat2x1;
	// typedef mat<2, 2, int32, mediump>	mediump_i32mat2x2;
	// typedef mat<2, 3, int32, mediump>	mediump_i32mat2x3;
	// typedef mat<2, 4, int32, mediump>	mediump_i32mat2x4;
	typedef mat<3, 1, int32, mediump>	mediump_i32mat3x1;
	// typedef mat<3, 2, int32, mediump>	mediump_i32mat3x2;
	// typedef mat<3, 3, int32, mediump>	mediump_i32mat3x3;
	// typedef mat<3, 4, int32, mediump>	mediump_i32mat3x4;
	typedef mat<4, 1, int32, mediump>	mediump_i32mat4x1;
	// typedef mat<4, 2, int32, mediump>	mediump_i32mat4x2;
	// typedef mat<4, 3, int32, mediump>	mediump_i32mat4x3;
	// typedef mat<4, 4, int32, mediump>	mediump_i32mat4x4;

	typedef mat<1, 1, int32, highp>		highp_i32mat1x1;
	typedef mat<1, 2, int32, highp>		highp_i32mat1x2;
	typedef mat<1, 3, int32, highp>		highp_i32mat1x3;
	typedef mat<1, 4, int32, highp>		highp_i32mat1x4;
	typedef mat<2, 1, int32, highp>		highp_i32mat2x1;
	// typedef mat<2, 2, int32, highp>		highp_i32mat2x2;
	// typedef mat<2, 3, int32, highp>		highp_i32mat2x3;
	// typedef mat<2, 4, int32, highp>		highp_i32mat2x4;
	typedef mat<3, 1, int32, highp>		highp_i32mat3x1;
	// typedef mat<3, 2, int32, highp>		highp_i32mat3x2;
	// typedef mat<3, 3, int32, highp>		highp_i32mat3x3;
	// typedef mat<3, 4, int32, highp>		highp_i32mat3x4;
	typedef mat<4, 1, int32, highp>		highp_i32mat4x1;
	// typedef mat<4, 2, int32, highp>		highp_i32mat4x2;
	// typedef mat<4, 3, int32, highp>		highp_i32mat4x3;
	// typedef mat<4, 4, int32, highp>		highp_i32mat4x4;

	typedef mat<1, 1, int32, defaultp>	i32mat1x1;
	typedef mat<1, 2, int32, defaultp>	i32mat1x2;
	typedef mat<1, 3, int32, defaultp>	i32mat1x3;
	typedef mat<1, 4, int32, defaultp>	i32mat1x4;
	typedef mat<2, 1, int32, defaultp>	i32mat2x1;
	// typedef mat<2, 2, int32, defaultp>	i32mat2x2;
	// typedef mat<2, 3, int32, defaultp>	i32mat2x3;
	// typedef mat<2, 4, int32, defaultp>	i32mat2x4;
	typedef mat<3, 1, int32, defaultp>	i32mat3x1;
	// typedef mat<3, 2, int32, defaultp>	i32mat3x2;
	// typedef mat<3, 3, int32, defaultp>	i32mat3x3;
	// typedef mat<3, 4, int32, defaultp>	i32mat3x4;
	typedef mat<4, 1, int32, defaultp>	i32mat4x1;
	// typedef mat<4, 2, int32, defaultp>	i32mat4x2;
	// typedef mat<4, 3, int32, defaultp>	i32mat4x3;
	// typedef mat<4, 4, int32, defaultp>	i32mat4x4;


	typedef mat<1, 1, int64, lowp>		lowp_i64mat1x1;
	typedef mat<1, 2, int64, lowp>		lowp_i64mat1x2;
	typedef mat<1, 3, int64, lowp>		lowp_i64mat1x3;
	typedef mat<1, 4, int64, lowp>		lowp_i64mat1x4;
	typedef mat<2, 1, int64, lowp>		lowp_i64mat2x1;
	// typedef mat<2, 2, int64, lowp>		lowp_i64mat2x2;
	// typedef mat<2, 3, int64, lowp>		lowp_i64mat2x3;
	// typedef mat<2, 4, int64, lowp>		lowp_i64mat2x4;
	typedef mat<3, 1, int64, lowp>		lowp_i64mat3x1;
	// typedef mat<3, 2, int64, lowp>		lowp_i64mat3x2;
	// typedef mat<3, 3, int64, lowp>		lowp_i64mat3x3;
	// typedef mat<3, 4, int64, lowp>		lowp_i64mat3x4;
	typedef mat<4, 1, int64, lowp>		lowp_i64mat4x1;
	// typedef mat<4, 2, int64, lowp>		lowp_i64mat4x2;
	// typedef mat<4, 3, int64, lowp>		lowp_i64mat4x3;
	// typedef mat<4, 4, int64, lowp>		lowp_i64mat4x4;

	typedef mat<1, 1, int64, mediump>	mediump_i64mat1x1;
	typedef mat<1, 2, int64, mediump>	mediump_i64mat1x2;
	typedef mat<1, 3, int64, mediump>	mediump_i64mat1x3;
	typedef mat<1, 4, int64, mediump>	mediump_i64mat1x4;
	typedef mat<2, 1, int64, mediump>	mediump_i64mat2x1;
	// typedef mat<2, 2, int64, mediump>	mediump_i64mat2x2;
	// typedef mat<2, 3, int64, mediump>	mediump_i64mat2x3;
	// typedef mat<2, 4, int64, mediump>	mediump_i64mat2x4;
	typedef mat<3, 1, int64, mediump>	mediump_i64mat3x1;
	// typedef mat<3, 2, int64, mediump>	mediump_i64mat3x2;
	// typedef mat<3, 3, int64, mediump>	mediump_i64mat3x3;
	// typedef mat<3, 4, int64, mediump>	mediump_i64mat3x4;
	typedef mat<4, 1, int64, mediump>	mediump_i64mat4x1;
	// typedef mat<4, 2, int64, mediump>	mediump_i64mat4x2;
	// typedef mat<4, 3, int64, mediump>	mediump_i64mat4x3;
	// typedef mat<4, 4, int64, mediump>	mediump_i64mat4x4;

	typedef mat<1, 1, int64, highp>		highp_i64mat1x1;
	typedef mat<1, 2, int64, highp>		highp_i64mat1x2;
	typedef mat<1, 3, int64, highp>		highp_i64mat1x3;
	typedef mat<1, 4, int64, highp>		highp_i64mat1x4;
	typedef mat<2, 1, int64, highp>		highp_i64mat2x1;
	// typedef mat<2, 2, int64, highp>		highp_i64mat2x2;
	// typedef mat<2, 3, int64, highp>		highp_i64mat2x3;
	// typedef mat<2, 4, int64, highp>		highp_i64mat2x4;
	typedef mat<3, 1, int64, highp>		highp_i64mat3x1;
	// typedef mat<3, 2, int64, highp>		highp_i64mat3x2;
	// typedef mat<3, 3, int64, highp>		highp_i64mat3x3;
	// typedef mat<3, 4, int64, highp>		highp_i64mat3x4;
	typedef mat<4, 1, int64, highp>		highp_i64mat4x1;
	// typedef mat<4, 2, int64, highp>		highp_i64mat4x2;
	// typedef mat<4, 3, int64, highp>		highp_i64mat4x3;
	// typedef mat<4, 4, int64, highp>		highp_i64mat4x4;

	typedef mat<1, 1, int64, defaultp>	i64mat1x1;
	typedef mat<1, 2, int64, defaultp>	i64mat1x2;
	typedef mat<1, 3, int64, defaultp>	i64mat1x3;
	typedef mat<1, 4, int64, defaultp>	i64mat1x4;
	typedef mat<2, 1, int64, defaultp>	i64mat2x1;
	// typedef mat<2, 2, int64, defaultp>	i64mat2x2;
	// typedef mat<2, 3, int64, defaultp>	i64mat2x3;
	// typedef mat<2, 4, int64, defaultp>	i64mat2x4;
	typedef mat<3, 1, int64, defaultp>	i64mat3x1;
	// typedef mat<3, 2, int64, defaultp>	i64mat3x2;
	// typedef mat<3, 3, int64, defaultp>	i64mat3x3;
	// typedef mat<3, 4, int64, defaultp>	i64mat3x4;
	typedef mat<4, 1, int64, defaultp>	i64mat4x1;
	// typedef mat<4, 2, int64, defaultp>	i64mat4x2;
	// typedef mat<4, 3, int64, defaultp>	i64mat4x3;
	// typedef mat<4, 4, int64, defaultp>	i64mat4x4;


	// Unsigned integer matrix MxN

	typedef mat<1, 1, uint, lowp>		lowp_umat1x1;
	typedef mat<1, 2, uint, lowp>		lowp_umat1x2;
	typedef mat<1, 3, uint, lowp>		lowp_umat1x3;
	typedef mat<1, 4, uint, lowp>		lowp_umat1x4;
	typedef mat<2, 1, uint, lowp>		lowp_umat2x1;
	// typedef mat<2, 2, uint, lowp>		lowp_umat2x2;
	// typedef mat<2, 3, uint, lowp>		lowp_umat2x3;
	// typedef mat<2, 4, uint, lowp>		lowp_umat2x4;
	typedef mat<3, 1, uint, lowp>		lowp_umat3x1;
	// typedef mat<3, 2, uint, lowp>		lowp_umat3x2;
	// typedef mat<3, 3, uint, lowp>		lowp_umat3x3;
	// typedef mat<3, 4, uint, lowp>		lowp_umat3x4;
	typedef mat<4, 1, uint, lowp>		lowp_umat4x1;
	// typedef mat<4, 2, uint, lowp>		lowp_umat4x2;
	// typedef mat<4, 3, uint, lowp>		lowp_umat4x3;
	// typedef mat<4, 4, uint, lowp>		lowp_umat4x4;

	typedef mat<1, 1, uint, mediump>	mediump_umat1x1;
	typedef mat<1, 2, uint, mediump>	mediump_umat1x2;
	typedef mat<1, 3, uint, mediump>	mediump_umat1x3;
	typedef mat<1, 4, uint, mediump>	mediump_umat1x4;
	typedef mat<2, 1, uint, mediump>	mediump_umat2x1;
	// typedef mat<2, 2, uint, mediump>	mediump_umat2x2;
	// typedef mat<2, 3, uint, mediump>	mediump_umat2x3;
	// typedef mat<2, 4, uint, mediump>	mediump_umat2x4;
	typedef mat<3, 1, uint, mediump>	mediump_umat3x1;
	// typedef mat<3, 2, uint, mediump>	mediump_umat3x2;
	// typedef mat<3, 3, uint, mediump>	mediump_umat3x3;
	// typedef mat<3, 4, uint, mediump>	mediump_umat3x4;
	typedef mat<4, 1, uint, mediump>	mediump_umat4x1;
	// typedef mat<4, 2, uint, mediump>	mediump_umat4x2;
	// typedef mat<4, 3, uint, mediump>	mediump_umat4x3;
	// typedef mat<4, 4, uint, mediump>	mediump_umat4x4;

	typedef mat<1, 1, uint, highp>		highp_umat1x1;
	typedef mat<1, 2, uint, highp>		highp_umat1x2;
	typedef mat<1, 3, uint, highp>		highp_umat1x3;
	typedef mat<1, 4, uint, highp>		highp_umat1x4;
	typedef mat<2, 1, uint, highp>		highp_umat2x1;
	// typedef mat<2, 2, uint, highp>		highp_umat2x2;
	// typedef mat<2, 3, uint, highp>		highp_umat2x3;
	// typedef mat<2, 4, uint, highp>		highp_umat2x4;
	typedef mat<3, 1, uint, highp>		highp_umat3x1;
	// typedef mat<3, 2, uint, highp>		highp_umat3x2;
	// typedef mat<3, 3, uint, highp>		highp_umat3x3;
	// typedef mat<3, 4, uint, highp>		highp_umat3x4;
	typedef mat<4, 1, uint, highp>		highp_umat4x1;
	// typedef mat<4, 2, uint, highp>		highp_umat4x2;
	// typedef mat<4, 3, uint, highp>		highp_umat4x3;
	// typedef mat<4, 4, uint, highp>		highp_umat4x4;

	typedef mat<1, 1, uint, defaultp>	umat1x1;
	typedef mat<1, 2, uint, defaultp>	umat1x2;
	typedef mat<1, 3, uint, defaultp>	umat1x3;
	typedef mat<1, 4, uint, defaultp>	umat1x4;
	typedef mat<2, 1, uint, defaultp>	umat2x1;
	// typedef mat<2, 2, uint, defaultp>	umat2x2;
	// typedef mat<2, 3, uint, defaultp>	umat2x3;
	// typedef mat<2, 4, uint, defaultp>	umat2x4;
	typedef mat<3, 1, uint, defaultp>	umat3x1;
	// typedef mat<3, 2, uint, defaultp>	umat3x2;
	// typedef mat<3, 3, uint, defaultp>	umat3x3;
	// typedef mat<3, 4, uint, defaultp>	umat3x4;
	typedef mat<4, 1, uint, defaultp>	umat4x1;
	// typedef mat<4, 2, uint, defaultp>	umat4x2;
	// typedef mat<4, 3, uint, defaultp>	umat4x3;
	// typedef mat<4, 4, uint, defaultp>	umat4x4;


	typedef mat<1, 1, uint8, lowp>		lowp_u8mat1x1;
	typedef mat<1, 2, uint8, lowp>		lowp_u8mat1x2;
	typedef mat<1, 3, uint8, lowp>		lowp_u8mat1x3;
	typedef mat<1, 4, uint8, lowp>		lowp_u8mat1x4;
	typedef mat<2, 1, uint8, lowp>		lowp_u8mat2x1;
	// typedef mat<2, 2, uint8, lowp>		lowp_u8mat2x2;
	// typedef mat<2, 3, uint8, lowp>		lowp_u8mat2x3;
	// typedef mat<2, 4, uint8, lowp>		lowp_u8mat2x4;
	typedef mat<3, 1, uint8, lowp>		lowp_u8mat3x1;
	// typedef mat<3, 2, uint8, lowp>		lowp_u8mat3x2;
	// typedef mat<3, 3, uint8, lowp>		lowp_u8mat3x3;
	// typedef mat<3, 4, uint8, lowp>		lowp_u8mat3x4;
	typedef mat<4, 1, uint8, lowp>		lowp_u8mat4x1;
	// typedef mat<4, 2, uint8, lowp>		lowp_u8mat4x2;
	// typedef mat<4, 3, uint8, lowp>		lowp_u8mat4x3;
	// typedef mat<4, 4, uint8, lowp>		lowp_u8mat4x4;

	typedef mat<1, 1, uint8, mediump>	mediump_u8mat1x1;
	typedef mat<1, 2, uint8, mediump>	mediump_u8mat1x2;
	typedef mat<1, 3, uint8, mediump>	mediump_u8mat1x3;
	typedef mat<1, 4, uint8, mediump>	mediump_u8mat1x4;
	typedef mat<2, 1, uint8, mediump>	mediump_u8mat2x1;
	// typedef mat<2, 2, uint8, mediump>	mediump_u8mat2x2;
	// typedef mat<2, 3, uint8, mediump>	mediump_u8mat2x3;
	// typedef mat<2, 4, uint8, mediump>	mediump_u8mat2x4;
	typedef mat<3, 1, uint8, mediump>	mediump_u8mat3x1;
	// typedef mat<3, 2, uint8, mediump>	mediump_u8mat3x2;
	// typedef mat<3, 3, uint8, mediump>	mediump_u8mat3x3;
	// typedef mat<3, 4, uint8, mediump>	mediump_u8mat3x4;
	typedef mat<4, 1, uint8, mediump>	mediump_u8mat4x1;
	// typedef mat<4, 2, uint8, mediump>	mediump_u8mat4x2;
	// typedef mat<4, 3, uint8, mediump>	mediump_u8mat4x3;
	// typedef mat<4, 4, uint8, mediump>	mediump_u8mat4x4;

	typedef mat<1, 1, uint8, highp>		highp_u8mat1x1;
	typedef mat<1, 2, uint8, highp>		highp_u8mat1x2;
	typedef mat<1, 3, uint8, highp>		highp_u8mat1x3;
	typedef mat<1, 4, uint8, highp>		highp_u8mat1x4;
	typedef mat<2, 1, uint8, highp>		highp_u8mat2x1;
	// typedef mat<2, 2, uint8, highp>		highp_u8mat2x2;
	// typedef mat<2, 3, uint8, highp>		highp_u8mat2x3;
	// typedef mat<2, 4, uint8, highp>		highp_u8mat2x4;
	typedef mat<3, 1, uint8, highp>		highp_u8mat3x1;
	// typedef mat<3, 2, uint8, highp>		highp_u8mat3x2;
	// typedef mat<3, 3, uint8, highp>		highp_u8mat3x3;
	// typedef mat<3, 4, uint8, highp>		highp_u8mat3x4;
	typedef mat<4, 1, uint8, highp>		highp_u8mat4x1;
	// typedef mat<4, 2, uint8, highp>		highp_u8mat4x2;
	// typedef mat<4, 3, uint8, highp>		highp_u8mat4x3;
	// typedef mat<4, 4, uint8, highp>		highp_u8mat4x4;

	typedef mat<1, 1, uint8, defaultp>	u8mat1x1;
	typedef mat<1, 2, uint8, defaultp>	u8mat1x2;
	typedef mat<1, 3, uint8, defaultp>	u8mat1x3;
	typedef mat<1, 4, uint8, defaultp>	u8mat1x4;
	typedef mat<2, 1, uint8, defaultp>	u8mat2x1;
	// typedef mat<2, 2, uint8, defaultp>	u8mat2x2;
	// typedef mat<2, 3, uint8, defaultp>	u8mat2x3;
	// typedef mat<2, 4, uint8, defaultp>	u8mat2x4;
	typedef mat<3, 1, uint8, defaultp>	u8mat3x1;
	// typedef mat<3, 2, uint8, defaultp>	u8mat3x2;
	// typedef mat<3, 3, uint8, defaultp>	u8mat3x3;
	// typedef mat<3, 4, uint8, defaultp>	u8mat3x4;
	typedef mat<4, 1, uint8, defaultp>	u8mat4x1;
	// typedef mat<4, 2, uint8, defaultp>	u8mat4x2;
	// typedef mat<4, 3, uint8, defaultp>	u8mat4x3;
	// typedef mat<4, 4, uint8, defaultp>	u8mat4x4;


	typedef mat<1, 1, uint16, lowp>		lowp_u16mat1x1;
	typedef mat<1, 2, uint16, lowp>		lowp_u16mat1x2;
	typedef mat<1, 3, uint16, lowp>		lowp_u16mat1x3;
	typedef mat<1, 4, uint16, lowp>		lowp_u16mat1x4;
	typedef mat<2, 1, uint16, lowp>		lowp_u16mat2x1;
	// typedef mat<2, 2, uint16, lowp>		lowp_u16mat2x2;
	// typedef mat<2, 3, uint16, lowp>		lowp_u16mat2x3;
	// typedef mat<2, 4, uint16, lowp>		lowp_u16mat2x4;
	typedef mat<3, 1, uint16, lowp>		lowp_u16mat3x1;
	// typedef mat<3, 2, uint16, lowp>		lowp_u16mat3x2;
	// typedef mat<3, 3, uint16, lowp>		lowp_u16mat3x3;
	// typedef mat<3, 4, uint16, lowp>		lowp_u16mat3x4;
	typedef mat<4, 1, uint16, lowp>		lowp_u16mat4x1;
	// typedef mat<4, 2, uint16, lowp>		lowp_u16mat4x2;
	// typedef mat<4, 3, uint16, lowp>		lowp_u16mat4x3;
	// typedef mat<4, 4, uint16, lowp>		lowp_u16mat4x4;

	typedef mat<1, 1, uint16, mediump>	mediump_u16mat1x1;
	typedef mat<1, 2, uint16, mediump>	mediump_u16mat1x2;
	typedef mat<1, 3, uint16, mediump>	mediump_u16mat1x3;
	typedef mat<1, 4, uint16, mediump>	mediump_u16mat1x4;
	typedef mat<2, 1, uint16, mediump>	mediump_u16mat2x1;
	// typedef mat<2, 2, uint16, mediump>	mediump_u16mat2x2;
	// typedef mat<2, 3, uint16, mediump>	mediump_u16mat2x3;
	// typedef mat<2, 4, uint16, mediump>	mediump_u16mat2x4;
	typedef mat<3, 1, uint16, mediump>	mediump_u16mat3x1;
	// typedef mat<3, 2, uint16, mediump>	mediump_u16mat3x2;
	// typedef mat<3, 3, uint16, mediump>	mediump_u16mat3x3;
	// typedef mat<3, 4, uint16, mediump>	mediump_u16mat3x4;
	typedef mat<4, 1, uint16, mediump>	mediump_u16mat4x1;
	// typedef mat<4, 2, uint16, mediump>	mediump_u16mat4x2;
	// typedef mat<4, 3, uint16, mediump>	mediump_u16mat4x3;
	// typedef mat<4, 4, uint16, mediump>	mediump_u16mat4x4;

	typedef mat<1, 1, uint16, highp>	highp_u16mat1x1;
	typedef mat<1, 2, uint16, highp>	highp_u16mat1x2;
	typedef mat<1, 3, uint16, highp>	highp_u16mat1x3;
	typedef mat<1, 4, uint16, highp>	highp_u16mat1x4;
	typedef mat<2, 1, uint16, highp>	highp_u16mat2x1;
	// typedef mat<2, 2, uint16, highp>	highp_u16mat2x2;
	// typedef mat<2, 3, uint16, highp>	highp_u16mat2x3;
	// typedef mat<2, 4, uint16, highp>	highp_u16mat2x4;
	typedef mat<3, 1, uint16, highp>	highp_u16mat3x1;
	// typedef mat<3, 2, uint16, highp>	highp_u16mat3x2;
	// typedef mat<3, 3, uint16, highp>	highp_u16mat3x3;
	// typedef mat<3, 4, uint16, highp>	highp_u16mat3x4;
	typedef mat<4, 1, uint16, highp>	highp_u16mat4x1;
	// typedef mat<4, 2, uint16, highp>	highp_u16mat4x2;
	// typedef mat<4, 3, uint16, highp>	highp_u16mat4x3;
	// typedef mat<4, 4, uint16, highp>	highp_u16mat4x4;

	typedef mat<1, 1, uint16, defaultp>	u16mat1x1;
	typedef mat<1, 2, uint16, defaultp>	u16mat1x2;
	typedef mat<1, 3, uint16, defaultp>	u16mat1x3;
	typedef mat<1, 4, uint16, defaultp>	u16mat1x4;
	typedef mat<2, 1, uint16, defaultp>	u16mat2x1;
	// typedef mat<2, 2, uint16, defaultp>	u16mat2x2;
	// typedef mat<2, 3, uint16, defaultp>	u16mat2x3;
	// typedef mat<2, 4, uint16, defaultp>	u16mat2x4;
	typedef mat<3, 1, uint16, defaultp>	u16mat3x1;
	// typedef mat<3, 2, uint16, defaultp>	u16mat3x2;
	// typedef mat<3, 3, uint16, defaultp>	u16mat3x3;
	// typedef mat<3, 4, uint16, defaultp>	u16mat3x4;
	typedef mat<4, 1, uint16, defaultp>	u16mat4x1;
	// typedef mat<4, 2, uint16, defaultp>	u16mat4x2;
	// typedef mat<4, 3, uint16, defaultp>	u16mat4x3;
	// typedef mat<4, 4, uint16, defaultp>	u16mat4x4;


	typedef mat<1, 1, uint32, lowp>		lowp_u32mat1x1;
	typedef mat<1, 2, uint32, lowp>		lowp_u32mat1x2;
	typedef mat<1, 3, uint32, lowp>		lowp_u32mat1x3;
	typedef mat<1, 4, uint32, lowp>		lowp_u32mat1x4;
	typedef mat<2, 1, uint32, lowp>		lowp_u32mat2x1;
	// typedef mat<2, 2, uint32, lowp>		lowp_u32mat2x2;
	// typedef mat<2, 3, uint32, lowp>		lowp_u32mat2x3;
	// typedef mat<2, 4, uint32, lowp>		lowp_u32mat2x4;
	typedef mat<3, 1, uint32, lowp>		lowp_u32mat3x1;
	// typedef mat<3, 2, uint32, lowp>		lowp_u32mat3x2;
	// typedef mat<3, 3, uint32, lowp>		lowp_u32mat3x3;
	// typedef mat<3, 4, uint32, lowp>		lowp_u32mat3x4;
	typedef mat<4, 1, uint32, lowp>		lowp_u32mat4x1;
	// typedef mat<4, 2, uint32, lowp>		lowp_u32mat4x2;
	// typedef mat<4, 3, uint32, lowp>		lowp_u32mat4x3;
	// typedef mat<4, 4, uint32, lowp>		lowp_u32mat4x4;

	typedef mat<1, 1, uint32, mediump>	mediump_u32mat1x1;
	typedef mat<1, 2, uint32, mediump>	mediump_u32mat1x2;
	typedef mat<1, 3, uint32, mediump>	mediump_u32mat1x3;
	typedef mat<1, 4, uint32, mediump>	mediump_u32mat1x4;
	typedef mat<2, 1, uint32, mediump>	mediump_u32mat2x1;
	// typedef mat<2, 2, uint32, mediump>	mediump_u32mat2x2;
	// typedef mat<2, 3, uint32, mediump>	mediump_u32mat2x3;
	// typedef mat<2, 4, uint32, mediump>	mediump_u32mat2x4;
	typedef mat<3, 1, uint32, mediump>	mediump_u32mat3x1;
	// typedef mat<3, 2, uint32, mediump>	mediump_u32mat3x2;
	// typedef mat<3, 3, uint32, mediump>	mediump_u32mat3x3;
	// typedef mat<3, 4, uint32, mediump>	mediump_u32mat3x4;
	typedef mat<4, 1, uint32, mediump>	mediump_u32mat4x1;
	// typedef mat<4, 2, uint32, mediump>	mediump_u32mat4x2;
	// typedef mat<4, 3, uint32, mediump>	mediump_u32mat4x3;
	// typedef mat<4, 4, uint32, mediump>	mediump_u32mat4x4;

	typedef mat<1, 1, uint32, highp>	highp_u32mat1x1;
	typedef mat<1, 2, uint32, highp>	highp_u32mat1x2;
	typedef mat<1, 3, uint32, highp>	highp_u32mat1x3;
	typedef mat<1, 4, uint32, highp>	highp_u32mat1x4;
	typedef mat<2, 1, uint32, highp>	highp_u32mat2x1;
	// typedef mat<2, 2, uint32, highp>	highp_u32mat2x2;
	// typedef mat<2, 3, uint32, highp>	highp_u32mat2x3;
	// typedef mat<2, 4, uint32, highp>	highp_u32mat2x4;
	typedef mat<3, 1, uint32, highp>	highp_u32mat3x1;
	// typedef mat<3, 2, uint32, highp>	highp_u32mat3x2;
	// typedef mat<3, 3, uint32, highp>	highp_u32mat3x3;
	// typedef mat<3, 4, uint32, highp>	highp_u32mat3x4;
	typedef mat<4, 1, uint32, highp>	highp_u32mat4x1;
	// typedef mat<4, 2, uint32, highp>	highp_u32mat4x2;
	// typedef mat<4, 3, uint32, highp>	highp_u32mat4x3;
	// typedef mat<4, 4, uint32, highp>	highp_u32mat4x4;

	typedef mat<1, 1, uint32, defaultp>	u32mat1x1;
	typedef mat<1, 2, uint32, defaultp>	u32mat1x2;
	typedef mat<1, 3, uint32, defaultp>	u32mat1x3;
	typedef mat<1, 4, uint32, defaultp>	u32mat1x4;
	typedef mat<2, 1, uint32, defaultp>	u32mat2x1;
	// typedef mat<2, 2, uint32, defaultp>	u32mat2x2;
	// typedef mat<2, 3, uint32, defaultp>	u32mat2x3;
	// typedef mat<2, 4, uint32, defaultp>	u32mat2x4;
	typedef mat<3, 1, uint32, defaultp>	u32mat3x1;
	// typedef mat<3, 2, uint32, defaultp>	u32mat3x2;
	// typedef mat<3, 3, uint32, defaultp>	u32mat3x3;
	// typedef mat<3, 4, uint32, defaultp>	u32mat3x4;
	typedef mat<4, 1, uint32, defaultp>	u32mat4x1;
	// typedef mat<4, 2, uint32, defaultp>	u32mat4x2;
	// typedef mat<4, 3, uint32, defaultp>	u32mat4x3;
	// typedef mat<4, 4, uint32, defaultp>	u32mat4x4;


	typedef mat<1, 1, uint64, lowp>		lowp_u64mat1x1;
	typedef mat<1, 2, uint64, lowp>		lowp_u64mat1x2;
	typedef mat<1, 3, uint64, lowp>		lowp_u64mat1x3;
	typedef mat<1, 4, uint64, lowp>		lowp_u64mat1x4;
	typedef mat<2, 1, uint64, lowp>		lowp_u64mat2x1;
	// typedef mat<2, 2, uint64, lowp>		lowp_u64mat2x2;
	// typedef mat<2, 3, uint64, lowp>		lowp_u64mat2x3;
	// typedef mat<2, 4, uint64, lowp>		lowp_u64mat2x4;
	typedef mat<3, 1, uint64, lowp>		lowp_u64mat3x1;
	// typedef mat<3, 2, uint64, lowp>		lowp_u64mat3x2;
	// typedef mat<3, 3, uint64, lowp>		lowp_u64mat3x3;
	// typedef mat<3, 4, uint64, lowp>		lowp_u64mat3x4;
	typedef mat<4, 1, uint64, lowp>		lowp_u64mat4x1;
	// typedef mat<4, 2, uint64, lowp>		lowp_u64mat4x2;
	// typedef mat<4, 3, uint64, lowp>		lowp_u64mat4x3;
	// typedef mat<4, 4, uint64, lowp>		lowp_u64mat4x4;

	typedef mat<1, 1, uint64, mediump>	mediump_u64mat1x1;
	typedef mat<1, 2, uint64, mediump>	mediump_u64mat1x2;
	typedef mat<1, 3, uint64, mediump>	mediump_u64mat1x3;
	typedef mat<1, 4, uint64, mediump>	mediump_u64mat1x4;
	typedef mat<2, 1, uint64, mediump>	mediump_u64mat2x1;
	// typedef mat<2, 2, uint64, mediump>	mediump_u64mat2x2;
	// typedef mat<2, 3, uint64, mediump>	mediump_u64mat2x3;
	// typedef mat<2, 4, uint64, mediump>	mediump_u64mat2x4;
	typedef mat<3, 1, uint64, mediump>	mediump_u64mat3x1;
	// typedef mat<3, 2, uint64, mediump>	mediump_u64mat3x2;
	// typedef mat<3, 3, uint64, mediump>	mediump_u64mat3x3;
	// typedef mat<3, 4, uint64, mediump>	mediump_u64mat3x4;
	typedef mat<4, 1, uint64, mediump>	mediump_u64mat4x1;
	// typedef mat<4, 2, uint64, mediump>	mediump_u64mat4x2;
	// typedef mat<4, 3, uint64, mediump>	mediump_u64mat4x3;
	// typedef mat<4, 4, uint64, mediump>	mediump_u64mat4x4;

	typedef mat<1, 1, uint64, highp>	highp_u64mat1x1;
	typedef mat<1, 2, uint64, highp>	highp_u64mat1x2;
	typedef mat<1, 3, uint64, highp>	highp_u64mat1x3;
	typedef mat<1, 4, uint64, highp>	highp_u64mat1x4;
	typedef mat<2, 1, uint64, highp>	highp_u64mat2x1;
	// typedef mat<2, 2, uint64, highp>	highp_u64mat2x2;
	// typedef mat<2, 3, uint64, highp>	highp_u64mat2x3;
	// typedef mat<2, 4, uint64, highp>	highp_u64mat2x4;
	typedef mat<3, 1, uint64, highp>	highp_u64mat3x1;
	// typedef mat<3, 2, uint64, highp>	highp_u64mat3x2;
	// typedef mat<3, 3, uint64, highp>	highp_u64mat3x3;
	// typedef mat<3, 4, uint64, highp>	highp_u64mat3x4;
	typedef mat<4, 1, uint64, highp>	highp_u64mat4x1;
	// typedef mat<4, 2, uint64, highp>	highp_u64mat4x2;
	// typedef mat<4, 3, uint64, highp>	highp_u64mat4x3;
	// typedef mat<4, 4, uint64, highp>	highp_u64mat4x4;

	typedef mat<1, 1, uint64, defaultp>	u64mat1x1;
	typedef mat<1, 2, uint64, defaultp>	u64mat1x2;
	typedef mat<1, 3, uint64, defaultp>	u64mat1x3;
	typedef mat<1, 4, uint64, defaultp>	u64mat1x4;
	typedef mat<2, 1, uint64, defaultp>	u64mat2x1;
	// typedef mat<2, 2, uint64, defaultp>	u64mat2x2;
	// typedef mat<2, 3, uint64, defaultp>	u64mat2x3;
	// typedef mat<2, 4, uint64, defaultp>	u64mat2x4;
	typedef mat<3, 1, uint64, defaultp>	u64mat3x1;
	// typedef mat<3, 2, uint64, defaultp>	u64mat3x2;
	// typedef mat<3, 3, uint64, defaultp>	u64mat3x3;
	// typedef mat<3, 4, uint64, defaultp>	u64mat3x4;
	typedef mat<4, 1, uint64, defaultp>	u64mat4x1;
	// typedef mat<4, 2, uint64, defaultp>	u64mat4x2;
	// typedef mat<4, 3, uint64, defaultp>	u64mat4x3;
	// typedef mat<4, 4, uint64, defaultp>	u64mat4x4;



}//namespace glm


